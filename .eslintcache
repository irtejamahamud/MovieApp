[{"I:\\ReactProject\\movie-app\\src\\index.js":"1","I:\\ReactProject\\movie-app\\src\\reportWebVitals.js":"2","I:\\ReactProject\\movie-app\\src\\App.js":"3","I:\\ReactProject\\movie-app\\src\\Components\\RoutesWeb.js":"4","I:\\ReactProject\\movie-app\\src\\Components\\Menu\\Menu.js":"5","I:\\ReactProject\\movie-app\\src\\Context\\MyListContext.js":"6","I:\\ReactProject\\movie-app\\src\\Components\\Menu\\OptionsMenu.js":"7","I:\\ReactProject\\movie-app\\src\\Components\\SearchBox.js":"8","I:\\ReactProject\\movie-app\\src\\Pages\\Home.js":"9","I:\\ReactProject\\movie-app\\src\\Pages\\Movies.js":"10","I:\\ReactProject\\movie-app\\src\\Pages\\MovieDetails.js":"11","I:\\ReactProject\\movie-app\\src\\Pages\\Series.js":"12","I:\\ReactProject\\movie-app\\src\\Pages\\SerieDetails.js":"13","I:\\ReactProject\\movie-app\\src\\Pages\\MyList.js":"14","I:\\ReactProject\\movie-app\\src\\Components\\Loading.js":"15","I:\\ReactProject\\movie-app\\src\\Components\\SearchResults.js":"16","I:\\ReactProject\\movie-app\\src\\Components\\PopularMovies.js":"17","I:\\ReactProject\\movie-app\\src\\Components\\Carousel.js":"18","I:\\ReactProject\\movie-app\\src\\Components\\PopularSeries.js":"19","I:\\ReactProject\\movie-app\\src\\Components\\SeriePoster.js":"20","I:\\ReactProject\\movie-app\\src\\Components\\AlertCustom.js":"21","I:\\ReactProject\\movie-app\\src\\Components\\MoviePoster.js":"22","I:\\ReactProject\\movie-app\\src\\Components\\PopularMoviesPoster.js":"23","I:\\ReactProject\\movie-app\\src\\Components\\PopularSeriesPoster.js":"24"},{"size":547,"mtime":1749989900257,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1749989900289,"results":"27","hashOfConfig":"26"},{"size":708,"mtime":1749989900225,"results":"28","hashOfConfig":"26"},{"size":798,"mtime":1749989900420,"results":"29","hashOfConfig":"26"},{"size":1138,"mtime":1749989900475,"results":"30","hashOfConfig":"26"},{"size":610,"mtime":1749989900526,"results":"31","hashOfConfig":"26"},{"size":255,"mtime":1749989900480,"results":"32","hashOfConfig":"26"},{"size":2758,"mtime":1749989900431,"results":"33","hashOfConfig":"26"},{"size":300,"mtime":1749989900545,"results":"34","hashOfConfig":"26"},{"size":2574,"mtime":1749989900565,"results":"35","hashOfConfig":"26"},{"size":2631,"mtime":1749989900556,"results":"36","hashOfConfig":"26"},{"size":2429,"mtime":1749989900596,"results":"37","hashOfConfig":"26"},{"size":2491,"mtime":1749989900587,"results":"38","hashOfConfig":"26"},{"size":708,"mtime":1749989900575,"results":"39","hashOfConfig":"26"},{"size":287,"mtime":1749989900353,"results":"40","hashOfConfig":"26"},{"size":1500,"mtime":1749989900443,"results":"41","hashOfConfig":"26"},{"size":1878,"mtime":1749989900374,"results":"42","hashOfConfig":"26"},{"size":2120,"mtime":1749989900342,"results":"43","hashOfConfig":"26"},{"size":1839,"mtime":1749989900398,"results":"44","hashOfConfig":"26"},{"size":666,"mtime":1749989900453,"results":"45","hashOfConfig":"26"},{"size":294,"mtime":1749989900333,"results":"46","hashOfConfig":"26"},{"size":669,"mtime":1749989900366,"results":"47","hashOfConfig":"26"},{"size":446,"mtime":1749989900386,"results":"48","hashOfConfig":"26"},{"size":471,"mtime":1749989900410,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sbz23j",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},"I:\\ReactProject\\movie-app\\src\\index.js",[],"I:\\ReactProject\\movie-app\\src\\reportWebVitals.js",[],"I:\\ReactProject\\movie-app\\src\\App.js",["111"],"import React, {useState} from \"react\";\nimport Menu from \"./Components/Menu/Menu\";\nimport RoutesWeb from \"./Components/RoutesWeb\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {MyListProvider} from \"./Context/MyListContext\";\nimport \"./App.css\";\n\nfunction App() {\n\n\tconst [options, setOptions] = useState([\n\t\t{\n\t\t\tpath:\"/\",\n\t\t\tlabel: \"Inicio\"\n\t\t},\n\t\t{\n\t\t\tpath:\"/peliculas\",\n\t\t\tlabel: \"Peliculas\"\n\t\t},\n\t\t{\n\t\t\tpath:\"/series\",\n\t\t\tlabel: \"Series\"\n\t\t},\n\t]);\n\n\n\treturn (\n  \t\t<MyListProvider>\n  \t\t\t<div className=\"app-container\">  \t\n      \t\t\t<BrowserRouter>\n      \t\t\t\t<Menu options={options} />\n      \t\t\t\t<RoutesWeb />\n      \t\t\t</BrowserRouter>\n\t\t\t</div>\n    \t</MyListProvider>\n  \t);\n}\n\nexport default App;\n","I:\\ReactProject\\movie-app\\src\\Components\\RoutesWeb.js",[],"I:\\ReactProject\\movie-app\\src\\Components\\Menu\\Menu.js",["112"],"import React, {useContext} from \"react\";\r\nimport OpcionesMenu from \"./OptionsMenu\";\r\nimport {Navbar, Nav, Button, Badge} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { BsList } from \"react-icons/bs\";\r\nimport SearchBox from \"../SearchBox\";\r\nimport {MyListContext} from \"../../Context/MyListContext\";\r\nimport \"../../Styles/Menu.css\";\r\n\r\nfunction Menu(props){\r\n\r\n\tconst [myListFavorites, setMyListFavorites] = useContext(MyListContext);\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<Navbar collapseOnSelect expand=\"lg\" variant=\"dark\">\r\n\t    \t\t<Navbar.Brand>Movie App</Navbar.Brand>\r\n\t    \t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n  \t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\t\t    \t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t\t{props.options.map(option=><OpcionesMenu option={option} />)}\r\n\t\t    \t\t</Nav>\r\n\t\t    \t\t<Nav>\r\n\t\t  \t\t\t\t<SearchBox />\r\n\t      \t\t\t\t<Button variant=\"warning\" as={Link} to={\"/lista\"}>\r\n\t      \t\t\t\t\t<BsList/>Mi Lista<Badge variant=\"light\">{myListFavorites.length}</Badge>\r\n\t      \t\t\t\t</Button>\r\n\t      \t\t\t</Nav>\r\n     \t\t\t </Navbar.Collapse>\r\n  \t\t\t</Navbar>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Menu;\r\n\r\n","I:\\ReactProject\\movie-app\\src\\Context\\MyListContext.js",["113"],"import React, {useState, useEffect, useContext} from \"react\";\r\n\r\n\texport const MyListContext = React.createContext();\r\n\r\n\tconst myListFromLocalStorage = JSON.parse(localStorage.getItem(\"myListFavorites\") || \"[]\")\r\n\r\nexport const MyListProvider = (props) => {\r\n\r\n\tconst [myListFavorites, setMyListFavorites] = useState(myListFromLocalStorage);\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\"myListFavorites\", JSON.stringify(myListFavorites));\r\n\t}, [myListFavorites]);\r\n\r\n\treturn (\r\n\t\t<MyListContext.Provider value={[myListFavorites, setMyListFavorites]}>\r\n\t\t\t{props.children}\r\n\t\t</MyListContext.Provider>\r\n\t)\r\n}","I:\\ReactProject\\movie-app\\src\\Components\\Menu\\OptionsMenu.js",[],"I:\\ReactProject\\movie-app\\src\\Components\\SearchBox.js",["114","115"],"\r\nimport React, {useState} from 'react';\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport SearchResults from \"../Components/SearchResults\";\r\nimport Loading from \"../Components/Loading\";\r\nimport {BsSearch, BsFillXSquareFill} from \"react-icons/bs\";\r\nimport \"../Styles/SearchBox.css\";\r\n\r\nfunction SearchBox(){\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [showOverlay, setShowOverlay] = useState(false);\r\n\r\n  const handleOnChange = (event) => {\r\n      setQuery(event.target.value);\r\n      if (event.target.value == \"\") {\r\n        setMovies([]);\r\n        setError(false);\r\n      }\r\n  };\r\n\r\n  const handleSubmit = async (event)=>{\r\n      event.preventDefault();\r\n      setSpinner(true);\r\n\r\n      fetch(`https://api.themoviedb.org/3/search/multi?api_key=c2c2cd525b5005c063f7b1a9d54ab699&language=es-ES&query=${query}&page=1&include_adult=false`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          setMovies(data.results);\r\n          setError(false);\r\n          setShowOverlay(true);\r\n        if(data.results.length == 0){\r\n              setError(true);\r\n              setShowOverlay(false);\r\n              console.log(\"no results\");\r\n        }\r\n          setSpinner(false);\r\n        });\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    setQuery(\"\");\r\n    setMovies([]);\r\n    setShowOverlay(false);\r\n  };\r\n\r\n  return(\r\n    <>\r\n      <div className=\"searchbox-container\">\r\n        <Form  inline onSubmit={handleSubmit}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Control \r\n              type=\"text\" \r\n              placeholder=\"Buscar peliculas y series\"  \r\n              value={query} \r\n              onChange={handleOnChange}/>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"dark\" className=\"search-button\"><BsSearch/></Button>\r\n        </Form>\r\n      </div>\r\n\r\n        {error && \r\n          <div className=\"error-overlay\">\r\n            <h3 className=\"no-results\">No hay resultados</h3>\r\n          </div>\r\n        }\r\n\r\n        {spinner && \r\n          <div className=\"search-overlay\">\r\n            <Loading/>   \r\n        </div>    \r\n        }       \r\n\r\n        {showOverlay && \r\n          <div className=\"search-overlay\">\r\n            <Button variant=\"dark\" className=\"close-button\" onClick={handleClose}><BsFillXSquareFill className=\"BsFillXSquareFill\"/></Button>\r\n            <div onClick={handleClose} className=\"search-results-container\">\r\n              {movies.map(movie=><SearchResults key={movie.id} {...movie} />)}\r\n            </div>\r\n          </div>}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","I:\\ReactProject\\movie-app\\src\\Pages\\Home.js",[],"I:\\ReactProject\\movie-app\\src\\Pages\\Movies.js",[],"I:\\ReactProject\\movie-app\\src\\Pages\\MovieDetails.js",["116","117"],"import React, {useState, useEffect, useContext} from \"react\";\r\nimport {Card, Button, Badge} from 'react-bootstrap';\r\nimport { BsHeartFill, BsFillStarFill, BsFillXCircleFill } from \"react-icons/bs\";\r\nimport {MyListContext} from \"../Context/MyListContext\";\r\nimport Loading from \"../Components/Loading\";\r\nimport \"../Styles/MovieDetails.css\";\r\nimport AlertCustom from \"../Components/AlertCustom\";\r\n\r\nconst image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nfunction DetallePelicula(props){\r\n\r\n\tconst [pelicula, setPelicula] = useState([]);\r\n\tconst [myListFavorites, setMyListFavorites] = useContext(MyListContext);\r\n\tconst [spinner, setSpinner] = useState(true);\r\n\tconst [alert,setAlert] = useState({variant:\"\",text:\"\"})\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSpinner(true)\r\n\t\tfetch(`https://api.themoviedb.org/3/movie/${(props.match.params.id)}?api_key=c2c2cd525b5005c063f7b1a9d54ab699&language=es`)\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((data) => {\r\n\t\t  \t\t\tconsole.log(data);\r\n\t\t  \t\t\tsetPelicula(data);\r\n\t\t  \t\t\tsetSpinner(false);\r\n\t\t  \t\t\t})\r\n\t\t\t.catch((error)=>{\r\n\t            console.log(error)\r\n\t        })\r\n\t}, []);\r\n\r\n\r\n\tconst favorite= {\r\n\t      id: pelicula.id,\r\n\t}\r\n\r\n\tconst saveFavs = (pelicula) => {\r\n\t    let repeated = myListFavorites.filter(function(pelicula){ return pelicula.id === favorite.id}).length;\r\n\t    if (!repeated){\r\n\t        setMyListFavorites([...myListFavorites, pelicula]);\r\n\t        setAlert({variant:\"success\",text:\"Agregado a Mi Lista\"});\r\n\t    } else{\r\n\t    \tsetAlert({variant:\"danger\",text:\"Ya ha sido agregado a Mi Lista\"});\r\n\t    };\r\n\t}\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t{spinner && <Loading />}\r\n\r\n\t\t\t<Card className=\"bg-dark text-white\">\r\n  \t\t\t\t<Card.Img className=\"background-image\" src={image + pelicula.backdrop_path} alt={pelicula.title}/>\r\n  \t\t\t\t\t<Card.ImgOverlay className=\"ImgOverlay\">\r\n\t\t\t\t \t\t<div className=\"column-1\">\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t    className=\"movie-poster-path\"\r\n\t\t\t\t\t\t\t    src={image + pelicula.poster_path}\r\n\t\t\t\t\t\t\t    alt={pelicula.title}/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t \t\t\t<div className=\"column-2\">\r\n\t\t\t    \t\t\t<Card.Title><h1>{pelicula.title}</h1></Card.Title>\r\n\t\t\t    \t\t\t<Card.Text>\r\n\t\t\t      \t\t\t\t<h5 className=\"movie-original-title\">({pelicula.original_title}) - <Badge variant=\"warning\" ><BsFillStarFill/>{pelicula.vote_average}</Badge></h5>\r\n\t\t\t    \t\t\t</Card.Text>\r\n\t\t\t    \t\t\t<Card.Text>{pelicula.overview}</Card.Text>\r\n\t\t\t\t\t\t\t<Button variant=\"danger\" onClick={()=>saveFavs(pelicula)}><BsHeartFill/> Agregar a Mi Lista</Button>\r\n\t\t\t    \t\t\t<AlertCustom variant={alert.variant} text={alert.text} />\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t</Card.ImgOverlay>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default DetallePelicula;","I:\\ReactProject\\movie-app\\src\\Pages\\Series.js",[],"I:\\ReactProject\\movie-app\\src\\Pages\\SerieDetails.js",["118","119"],"import React, {useState, useEffect, useContext} from \"react\";\r\nimport {Card, Button, Badge} from 'react-bootstrap';\r\nimport {BsHeartFill, BsFillStarFill, BsFillXCircleFill} from \"react-icons/bs\";\r\nimport {MyListContext} from \"../Context/MyListContext\";\r\nimport Loading from \"../Components/Loading\";\r\nimport AlertCustom from \"../Components/AlertCustom\";\r\n\r\nconst image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nfunction DetalleSerie(props){\r\n\r\n\tconst [serie, setSerie] = useState({});\r\n\tconst [myListFavorites, setMyListFavorites] = useContext(MyListContext);\r\n\tconst [spinner, setSpinner] = useState(true);\r\n\tconst [alert,setAlert] = useState({variant:\"\",text:\"\"})\r\n\r\nuseEffect(() =>{\r\n\tsetSpinner(true);\r\n\tfetch(`https://api.themoviedb.org/3/tv/${(props.match.params.id)}?api_key=c2c2cd525b5005c063f7b1a9d54ab699&language=es-ES`)\r\n\t.then((res) => res.json())\r\n\t.then((data) => {\r\n\t  \tconsole.log(data);\r\n\t  \tsetSerie(data);\r\n\t  \tsetSpinner(false);\r\n\t  \t\t\t})\r\n\t.catch((error)=>{\r\n        console.log(error)\r\n    })\r\n}, []);\r\n\r\n\r\nconst favorite= {\r\n      id: serie.id,\r\n}\r\n\r\nconst saveFavs = (serie) => {\r\n    let repeated = myListFavorites.filter(function(serie){ return serie.id === favorite.id}).length;\r\n    if (!repeated){\r\n        setMyListFavorites([...myListFavorites, serie]);\r\n        setAlert({variant:\"success\",text:\"Agregado a Mi Lista\"});\r\n    } else{\r\n    \tsetAlert({variant:\"danger\",text:\"Ya ha sido agregado a Mi Lista\"});\r\n    }\r\n  }\r\n\r\nreturn (\r\n\t<>\r\n\t\t{spinner &&<Loading />}\r\n\r\n\t\t<Card className=\"bg-dark text-white\" >\r\n  \t\t\t<Card.Img className=\"background-image\" src={image + serie.backdrop_path} alt=\"Card image\"/>\r\n \t\t \t\t<Card.ImgOverlay className=\"ImgOverlay\">\r\n \t\t\t\t\t<div className=\"column-1\">\r\n\t\t\t\t\t\t<img\r\n\t\t\t      \t\t\tclassName=\"serie-poster-path\"\r\n\t\t\t     \t \t\tsrc={image + serie.poster_path}\r\n\t\t\t      \t\t\talt={serie.name}/>\r\n\t\t\t\t\t</div>\r\n \t\r\n \t\t\t\t\t<div className=\"column-2\">\r\n    \t\t\t\t\t<Card.Title><h1>{serie.name}</h1></Card.Title>\r\n    \t\t\t\t\t\t<Card.Text>\r\n      \t\t\t\t\t\t\t<h5 className=\"movie-original-title\">({serie.original_name}) - <Badge variant=\"warning\" ><BsFillStarFill/>{serie.vote_average}</Badge></h5>\r\n    \t\t\t\t\t\t</Card.Text>\r\n    \t\t\t\t\t\t<Card.Text>{serie.overview}</Card.Text>\r\n  \r\n    \t\t\t\t\t\t<Button variant=\"danger\" onClick={()=>saveFavs(serie)}><BsHeartFill/> Agregar a Mi Lista</Button>\r\n    \t\t\t\t\t\t<AlertCustom variant={alert.variant} text={alert.text} />\r\n\t\t\t\t\t</div>\r\n\t\t    \t</Card.ImgOverlay>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t)\r\n\r\n}\r\n\r\nexport default DetalleSerie;","I:\\ReactProject\\movie-app\\src\\Pages\\MyList.js",["120","121"],"import React, {useContext} from \"react\";\r\nimport {MyListContext} from \"../Context/MyListContext\";\r\nimport {Link} from 'react-router-dom';\r\nimport \"../Styles/MyList.css\";\r\n\r\nconst image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nfunction MyList (){\r\n\r\n\tconst [myListFavorites, setMyListFavorites] = useContext(MyListContext);\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<h3>Mi Lista</h3>\r\n\t\t\t<div className=\"favorites-container\">\r\n\t\t\t\t{myListFavorites.map((pelicula) => (\r\n\t\t\t\t\t<div className=\"favoriteposter-container\">\r\n\t\t\t\t\t\t<img \r\n\t\t\t\t\t\t\tclassName=\"favoriteimage-container\"\r\n\t\t\t\t\t\t\tsrc={image + pelicula.poster_path}\r\n\t\t\t\t\t\t\talt={pelicula.title}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default MyList;","I:\\ReactProject\\movie-app\\src\\Components\\Loading.js",[],"I:\\ReactProject\\movie-app\\src\\Components\\SearchResults.js",["122"],"import React from \"react\";\r\nimport {BiConfused } from \"react-icons/bi\";\r\nimport {Link} from 'react-router-dom';\r\nimport \"../Styles/SearchResults.css\";\r\n\r\nconst image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nfunction SearchResults(movie) {\r\n\r\n  return (\r\n    <div>\r\n      {movie.media_type == \"movie\" ? \r\n\r\n        (<Link to={\"/peliculas/\"+movie.id}>\r\n          <div className=\"search-result-container\">\r\n            {movie.poster_path ? \r\n            (<img\r\n            className=\"search-result-image\"\r\n            src={image + movie.poster_path}\r\n            alt={`${movie.title} Poster`}/>\r\n            ) \r\n            :\r\n            (<div className=\"no-image-container\">\r\n            <BiConfused className=\"BiConfused\"/>\r\n            <p className=\"no-image-text\">Imagen no disponible</p>\r\n            </div>\r\n            )}\r\n          </div>\r\n        </Link>)\r\n\r\n       : \r\n\r\n       (<Link to={\"/series/\"+movie.id}>\r\n          <div className=\"search-result-container\">\r\n            {movie.poster_path ? \r\n            (<img\r\n              className=\"search-result-image\"\r\n              src={image + movie.poster_path}\r\n              alt={`${movie.title} Poster`}/>\r\n            ) \r\n            : \r\n            (<div className=\"no-image-container\">\r\n            <BiConfused className=\"BiConfused\"/>\r\n            <p className=\"no-image-text\">Imagen no disponible</p>\r\n            </div>\r\n            )}\r\n          </div>\r\n        </Link>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchResults;","I:\\ReactProject\\movie-app\\src\\Components\\PopularMovies.js",[],"I:\\ReactProject\\movie-app\\src\\Components\\Carousel.js",["123"],"import React , {useState, useEffect} from \"react\";\r\nimport {Carousel, Badge, Button} from \"react-bootstrap\";\r\nimport Loading from \"../Components/Loading\";\r\nimport {BsFillStarFill, BsInfoCircle} from \"react-icons/bs\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"../Styles/Carousel.css\";\r\n\r\nfunction TrendingCarousel(){\r\n\r\n  const [results, setResults] = useState([]);\r\n  const [spinner, setSpinner] = useState(true);\r\n\r\n  const image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\n  useEffect(() => {\r\n  \tfetch('https://api.themoviedb.org/3/trending/all/day?api_key=c2c2cd525b5005c063f7b1a9d54ab699&language=es-ES')\r\n  \t\t.then((res) => res.json())\r\n  \t\t.then((data) => {\r\n  \t  \tconsole.log(data);\r\n  \t  \tsetResults(data.results);\r\n        setSpinner(false);\r\n  \t  })\r\n      .catch((error)=>{\r\n            console.log(error)\r\n        })\r\n  }, []);\r\n\r\n  return(\r\n\r\n    <div>\r\n\r\n      {spinner &&\r\n        <Loading />\r\n      }\r\n      \r\n\t\t  <Carousel indicators={false} >\r\n        {results.length > 0 && results.map((result)=>(\r\n          <Carousel.Item className=\"carousel\">\r\n            <img\r\n            className=\"d-block w-100\"\r\n            src={image + result.backdrop_path}\r\n            alt={result.title}\r\n            />\r\n            \r\n            <Carousel.Caption className=\"carousel-caption\">  \r\n              <h1>{result.title || result.name }</h1>\r\n              <h5 className=\"original-title\">({result.original_title || result.original_name}) - <Badge variant=\"warning\" ><BsFillStarFill/>{result.vote_average}</Badge></h5>\r\n              <p className=\"carousel-overview\">{result.overview}</p>\r\n      \r\n              {result.media_type == \"movie\" ? \r\n              (<Link to={\"/peliculas/\"+result.id}>\r\n                <Button variant=\"secondary\"><BsInfoCircle/> Más información</Button>\r\n              </Link>)\r\n              : (<Link to={\"/series/\"+result.id}>\r\n                <Button variant=\"secondary\"><BsInfoCircle/> Más información</Button>\r\n              </Link>)}\r\n            </Carousel.Caption>\r\n        </Carousel.Item>))}\r\n      </Carousel>\r\n    </div>\r\n\t)\r\n}\r\n\r\nexport default TrendingCarousel;","I:\\ReactProject\\movie-app\\src\\Components\\PopularSeries.js",[],"I:\\ReactProject\\movie-app\\src\\Components\\SeriePoster.js",["124"],"import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport {BiConfused} from \"react-icons/bi\";\r\nimport \"../Styles/SeriePoster.css\";\r\n\r\nconst image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nfunction SeriePoster(results){\r\n\treturn (\r\n\t\t<div className=\"serieposter-container\">\r\n\t\t\t<Link to={\"/series/\"+results.id}>\r\n\t\t \t\t{results.poster_path ? \r\n\t\t \t\t(<img src={image + results.poster_path}/>) \r\n\t\t \t\t:\r\n\t\t\t \t(<div className=\"BiConfused-container\">\r\n\t         \t<BiConfused className=\"BiConfused\"/ >\r\n\t          \t<p className=\"no-image\">Imagen no disponible</p>\r\n\t          \t</div>\r\n\t        \t)}\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SeriePoster;","I:\\ReactProject\\movie-app\\src\\Components\\AlertCustom.js",[],"I:\\ReactProject\\movie-app\\src\\Components\\MoviePoster.js",["125"],"import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport {BiConfused} from \"react-icons/bi\";\r\nimport \"../Styles/MoviePoster.css\";\r\n\r\nconst image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nfunction MoviePoster(result) {\r\n\r\n\treturn (\r\n\t\t<div className=\"poster-container\">\r\n\t\t\t<Link to={\"/peliculas/\"+result.id}>\r\n\t\t\t  \t{result.poster_path ? \r\n\t\t\t  \t(<img src={image + result.poster_path}/>) \r\n\t\t\t  \t:\r\n\t\t\t\t(<div className=\"BiConfused-container\">\r\n\t         \t<BiConfused className=\"BiConfused\"/>\r\n\t            <p className=\"no-image\">Imagen no disponible</p>\r\n\t            </div>\r\n\t        \t)}\r\n\t\t\t </Link>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default MoviePoster;","I:\\ReactProject\\movie-app\\src\\Components\\PopularMoviesPoster.js",["126"],"import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport '../Styles/PopularMoviesPoster.css';\r\n\r\nconst image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nfunction PopularMoviesPoster(pelicula) {\r\n\r\n\treturn (\r\n\t\t<div className=\"image-container\">\r\n\t\t\t<Link to={\"/peliculas/\"+pelicula.id}>\r\n\t\t\t<img className=\"popularmovies-image\" src={image + pelicula.poster_path}/>\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PopularMoviesPoster;","I:\\ReactProject\\movie-app\\src\\Components\\PopularSeriesPoster.js",["127","128"],"import React from \"react\";\r\nimport Button from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport '../Styles/PopularSeriesPoster.css';\r\n\r\nconst image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nfunction PopularSeriesPoster(serie){\r\n\treturn (\r\n\t\t<div className=\"image-container\">\r\n\t\t\t<Link to={\"/series/\"+serie.id}>\r\n\t\t\t<img className=\"popularseries-image\" src={image + serie.poster_path}/>\r\n\t\t\t</Link>\r\n\t\t </div>\r\n\t)\r\n}\r\n\r\nexport default PopularSeriesPoster;",{"ruleId":"129","severity":1,"message":"130","line":10,"column":18,"nodeType":"131","messageId":"132","endLine":10,"endColumn":28},{"ruleId":"129","severity":1,"message":"133","line":12,"column":26,"nodeType":"131","messageId":"132","endLine":12,"endColumn":44},{"ruleId":"129","severity":1,"message":"134","line":1,"column":37,"nodeType":"131","messageId":"132","endLine":1,"endColumn":47},{"ruleId":"135","severity":1,"message":"136","line":19,"column":30,"nodeType":"137","messageId":"138","endLine":19,"endColumn":32},{"ruleId":"135","severity":1,"message":"136","line":36,"column":32,"nodeType":"137","messageId":"138","endLine":36,"endColumn":34},{"ruleId":"129","severity":1,"message":"139","line":3,"column":39,"nodeType":"131","messageId":"132","endLine":3,"endColumn":56},{"ruleId":"140","severity":1,"message":"141","line":30,"column":5,"nodeType":"142","endLine":30,"endColumn":7,"suggestions":"143"},{"ruleId":"129","severity":1,"message":"139","line":3,"column":38,"nodeType":"131","messageId":"132","endLine":3,"endColumn":55},{"ruleId":"140","severity":1,"message":"141","line":29,"column":4,"nodeType":"142","endLine":29,"endColumn":6,"suggestions":"144"},{"ruleId":"129","severity":1,"message":"145","line":3,"column":9,"nodeType":"131","messageId":"132","endLine":3,"endColumn":13},{"ruleId":"129","severity":1,"message":"133","line":10,"column":26,"nodeType":"131","messageId":"132","endLine":10,"endColumn":44},{"ruleId":"135","severity":1,"message":"136","line":12,"column":25,"nodeType":"137","messageId":"138","endLine":12,"endColumn":27},{"ruleId":"135","severity":1,"message":"136","line":50,"column":34,"nodeType":"137","messageId":"138","endLine":50,"endColumn":36},{"ruleId":"146","severity":1,"message":"147","line":13,"column":7,"nodeType":"148","endLine":13,"endColumn":47},{"ruleId":"146","severity":1,"message":"147","line":14,"column":8,"nodeType":"148","endLine":14,"endColumn":47},{"ruleId":"146","severity":1,"message":"147","line":12,"column":4,"nodeType":"148","endLine":12,"endColumn":77},{"ruleId":"129","severity":1,"message":"149","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":12,"column":4,"nodeType":"148","endLine":12,"endColumn":74},"no-unused-vars","'setOptions' is assigned a value but never used.","Identifier","unusedVar","'setMyListFavorites' is assigned a value but never used.","'useContext' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'BsFillXCircleFill' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["150"],["151"],"'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.",{"desc":"152","fix":"153"},{"desc":"152","fix":"154"},"Update the dependencies array to be: [props.match.params.id]",{"range":"155","text":"156"},{"range":"157","text":"156"},[1100,1102],"[props.match.params.id]",[1018,1020]]
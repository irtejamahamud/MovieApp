{"ast":null,"code":"var _jsxFileName = \"I:\\\\ReactProject\\\\movie-app\\\\src\\\\Pages\\\\SerieDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Card, Button, Badge } from \"react-bootstrap\";\nimport { BsHeartFill, BsFillStarFill, BsFillXCircleFill } from \"react-icons/bs\";\nimport { MyListContext } from \"../Context/MyListContext\";\nimport Loading from \"../Components/Loading\";\nimport AlertCustom from \"../Components/AlertCustom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst image = \"https://image.tmdb.org/t/p/w1280\";\nfunction DetalleSerie(props) {\n  _s();\n  const [serie, setSerie] = useState({});\n  const [myListFavorites, setMyListFavorites] = useContext(MyListContext);\n  const [spinner, setSpinner] = useState(true);\n  const [alert, setAlert] = useState({\n    variant: \"\",\n    text: \"\"\n  });\n  useEffect(() => {\n    setSpinner(true);\n    fetch(`https://api.themoviedb.org/3/tv/${props.match.params.id}?api_key=c2c2cd525b5005c063f7b1a9d54ab699&language=en-US`).then(res => res.json()).then(data => {\n      console.log(data);\n      setSerie(data);\n      setSpinner(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const favorite = {\n    id: serie.id\n  };\n  const saveFavs = serie => {\n    let repeated = myListFavorites.filter(function (serie) {\n      return serie.id === favorite.id;\n    }).length;\n    if (!repeated) {\n      setMyListFavorites([...myListFavorites, serie]);\n      setAlert({\n        variant: \"success\",\n        text: \"Agregado a Mi Lista\"\n      });\n    } else {\n      setAlert({\n        variant: \"danger\",\n        text: \"Ya ha sido agregado a Mi Lista\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [spinner && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"bg-dark text-white\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        className: \"background-image\",\n        src: image + serie.backdrop_path,\n        alt: \"Card image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.ImgOverlay, {\n        className: \"ImgOverlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column-1\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"serie-poster-path\",\n            src: image + serie.poster_path,\n            alt: serie.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column-2\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: serie.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"movie-original-title\",\n              children: [\"(\", serie.original_name, \") -\", \" \", /*#__PURE__*/_jsxDEV(Badge, {\n                variant: \"warning\",\n                children: [/*#__PURE__*/_jsxDEV(BsFillStarFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, this), serie.vote_average]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: serie.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => saveFavs(serie),\n            children: [/*#__PURE__*/_jsxDEV(BsHeartFill, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), \" Agregar a Mi Lista\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertCustom, {\n            variant: alert.variant,\n            text: alert.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(DetalleSerie, \"LuIpDLDX2SqUk3kynLO+MXk4+/k=\");\n_c = DetalleSerie;\nexport default DetalleSerie;\nvar _c;\n$RefreshReg$(_c, \"DetalleSerie\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Card","Button","Badge","BsHeartFill","BsFillStarFill","BsFillXCircleFill","MyListContext","Loading","AlertCustom","jsxDEV","_jsxDEV","Fragment","_Fragment","image","DetalleSerie","props","_s","serie","setSerie","myListFavorites","setMyListFavorites","spinner","setSpinner","alert","setAlert","variant","text","fetch","match","params","id","then","res","json","data","console","log","catch","error","favorite","saveFavs","repeated","filter","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Img","src","backdrop_path","alt","ImgOverlay","poster_path","name","Title","Text","original_name","vote_average","overview","onClick","_c","$RefreshReg$"],"sources":["I:/ReactProject/movie-app/src/Pages/SerieDetails.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Card, Button, Badge } from \"react-bootstrap\";\r\nimport { BsHeartFill, BsFillStarFill, BsFillXCircleFill } from \"react-icons/bs\";\r\nimport { MyListContext } from \"../Context/MyListContext\";\r\nimport Loading from \"../Components/Loading\";\r\nimport AlertCustom from \"../Components/AlertCustom\";\r\n\r\nconst image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nfunction DetalleSerie(props) {\r\n  const [serie, setSerie] = useState({});\r\n  const [myListFavorites, setMyListFavorites] = useContext(MyListContext);\r\n  const [spinner, setSpinner] = useState(true);\r\n  const [alert, setAlert] = useState({ variant: \"\", text: \"\" });\r\n\r\n  useEffect(() => {\r\n    setSpinner(true);\r\n    fetch(\r\n      `https://api.themoviedb.org/3/tv/${props.match.params.id}?api_key=c2c2cd525b5005c063f7b1a9d54ab699&language=en-US`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setSerie(data);\r\n        setSpinner(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const favorite = {\r\n    id: serie.id,\r\n  };\r\n\r\n  const saveFavs = (serie) => {\r\n    let repeated = myListFavorites.filter(function (serie) {\r\n      return serie.id === favorite.id;\r\n    }).length;\r\n    if (!repeated) {\r\n      setMyListFavorites([...myListFavorites, serie]);\r\n      setAlert({ variant: \"success\", text: \"Agregado a Mi Lista\" });\r\n    } else {\r\n      setAlert({ variant: \"danger\", text: \"Ya ha sido agregado a Mi Lista\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {spinner && <Loading />}\r\n\r\n      <Card className=\"bg-dark text-white\">\r\n        <Card.Img\r\n          className=\"background-image\"\r\n          src={image + serie.backdrop_path}\r\n          alt=\"Card image\"\r\n        />\r\n        <Card.ImgOverlay className=\"ImgOverlay\">\r\n          <div className=\"column-1\">\r\n            <img\r\n              className=\"serie-poster-path\"\r\n              src={image + serie.poster_path}\r\n              alt={serie.name}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"column-2\">\r\n            <Card.Title>\r\n              <h1>{serie.name}</h1>\r\n            </Card.Title>\r\n            <Card.Text>\r\n              <h5 className=\"movie-original-title\">\r\n                ({serie.original_name}) -{\" \"}\r\n                <Badge variant=\"warning\">\r\n                  <BsFillStarFill />\r\n                  {serie.vote_average}\r\n                </Badge>\r\n              </h5>\r\n            </Card.Text>\r\n            <Card.Text>{serie.overview}</Card.Text>\r\n\r\n            <Button variant=\"danger\" onClick={() => saveFavs(serie)}>\r\n              <BsHeartFill /> Agregar a Mi Lista\r\n            </Button>\r\n            <AlertCustom variant={alert.variant} text={alert.text} />\r\n          </div>\r\n        </Card.ImgOverlay>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DetalleSerie;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}